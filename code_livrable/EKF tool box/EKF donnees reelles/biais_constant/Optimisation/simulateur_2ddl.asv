%% SIMulateur
%% Loi de commande
l = 0.5;

t = linspace(0,100,1000);
dt = t(2)-t(1);
A = 40*pi/180;
f = 0.5;
omega = 2*pi*f;
kx = 2*pi/6;

r1 = A*cos(omega*t);
r2 = A*cos(omega*t-kx);
r = [r1; r2];

rp1 = -A*omega*sin(omega*t);
rp2 = -A*omega*sin(omega*t-kx);
rp = [rp1; rp2];

%% Initialisation
eta = zeros(3,length(t)); % [Vox; Voy; Woz]
X = zeros(3,length(t)); % [x; y; theta]
X(:,1) = [0;0;pi-0.3]; % Etats initiaux

%% Simulation
for i = 1:length(t)-1
    eta(:,i) = matriceA3(r(:,i),rp(:,i),l);
    X(1,i+1) = X(1,i) + (eta(1,i) * cos(X(3,i)) - eta(2,i) * sin(X(3,i))) * dt;
    X(2,i+1) = X(2,i) + (eta(1,i) * sin(X(3,i)) + eta(2,i) * cos(X(3,i))) * dt;
    X(3,i+1) = X(3,i) + eta(3,i) * dt;

end

figure(2),
plot(t,r1,t,r2)

x = X(1,:);
y = X(2,:);
theta = X(3,:);

px1 = x + l*cos(theta);
py1 = y + l*sin(theta);

px2 = px1 + l*cos(theta+r1);
py2 = py1 + l*sin(theta+r1);

px3 = px2 + l*cos(theta+r1+r2);
py3 = py2 + l*sin(theta+r1+r2);

for i = 1:length(t)
    figure(1),
    plot(x(1:i,y[1:i],'--k')
    hold on 
    plot([x(i),px1(i),px2(i),px3(i)],[y(i),py1(i),py2(i),py3(i)],'b','LineWidth',2)
    plot(x(i),y(i),'.g','LineWidth',10)
    plot(px1(i),py1(i),'.r','LineWidth',10)
    plot(px2(i),py2(i),'.r','LineWidth',10)
    plot(px3(i),py3(i),'.r','LineWidth',10)
    hold off 
    title('Repr√©sentation')
    xlim([x(i)-3,x(i)+2])
    ylim([-2, 2])
    pause(0.1)
end

function eta = matriceA3(r,r_dot,l)
    A = [0,                 1,              l/2;
         -sin(r(1)),        cos(r(1)),      l/2+l*cos(r(1));
         -sin(r(1)+r(2)),   cos(r(1)+r(2)), l/2+l*cos(r(2))+l*cos(r(1)+r(2))];

    B = [0,                 0;
         l/2,               0;
         l/2+l*cos(r(2)),   l/2];

    J = A\B;
    eta = -J*r_dot;
end